// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hltv.Core.context;

#nullable disable

namespace hltv.Core.Migrations
{
    [DbContext(typeof(hltvContext))]
    [Migration("20231213161258_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hltv.Core.entities.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("hltv.Core.entities.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoundStatisticsId")
                        .HasColumnType("int");

                    b.Property<int>("StatisticsId")
                        .HasColumnType("int");

                    b.Property<string>("StatsLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.HasIndex("CountryId");

                    b.HasIndex("RoundStatisticsId");

                    b.HasIndex("StatisticsId");

                    b.HasIndex("TeamId");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("hltv.Core.entities.RoundStatistics", b =>
                {
                    b.Property<int>("RoundStatisticsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoundStatisticsId"));

                    b.Property<double>("AssistsPerRound")
                        .HasColumnType("float");

                    b.Property<double>("DeathsPerRound")
                        .HasColumnType("float");

                    b.Property<double>("GrenadeDamagePerRound")
                        .HasColumnType("float");

                    b.Property<double>("Impact")
                        .HasColumnType("float");

                    b.Property<double>("Kast")
                        .HasColumnType("float");

                    b.Property<double>("KillsPerRound")
                        .HasColumnType("float");

                    b.Property<double>("SavedByTeammatePerRound")
                        .HasColumnType("float");

                    b.Property<double>("TeammateSavedPerRound")
                        .HasColumnType("float");

                    b.HasKey("RoundStatisticsId");

                    b.ToTable("RoundStatistics");
                });

            modelBuilder.Entity("hltv.Core.entities.Statistics", b =>
                {
                    b.Property<int>("StatisticsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatisticsId"));

                    b.Property<double>("HeadshotPercentage")
                        .HasColumnType("float");

                    b.Property<double>("KdDifference")
                        .HasColumnType("float");

                    b.Property<double>("KdRatio")
                        .HasColumnType("float");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("TotalDeaths")
                        .HasColumnType("int");

                    b.Property<int>("TotalKills")
                        .HasColumnType("int");

                    b.HasKey("StatisticsId");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("hltv.Core.entities.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("hltv.Core.entities.Player", b =>
                {
                    b.HasOne("hltv.Core.entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hltv.Core.entities.RoundStatistics", "RoundStatistics")
                        .WithMany("Player")
                        .HasForeignKey("RoundStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hltv.Core.entities.Statistics", "Statistics")
                        .WithMany("Player")
                        .HasForeignKey("StatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hltv.Core.entities.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("RoundStatistics");

                    b.Navigation("Statistics");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("hltv.Core.entities.RoundStatistics", b =>
                {
                    b.Navigation("Player");
                });

            modelBuilder.Entity("hltv.Core.entities.Statistics", b =>
                {
                    b.Navigation("Player");
                });

            modelBuilder.Entity("hltv.Core.entities.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
